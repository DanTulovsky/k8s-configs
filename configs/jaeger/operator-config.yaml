apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: jaeger
  namespace: observability
spec:
  # strategy: allInOne
  strategy: production
  allInOne:
    image: jaegertracing/all-in-one:latest
    options:
      # https://www.jaegertracing.io/docs/1.21/cli/
      log-level: debug
      query.max-clock-skew-adjustment: "0s"
      collector.zipkin.host-port: ":9411"
  # collector:
  #   image: jaegertracing/jaeger-opentelemetry-collector:latest # <1>
  #   Replicas: 1
  #   MaxReplicas: 1
  #   Autoscale: false
  #   config:
  #     extensions:
  #       health_check:
  #         port: 14269
  # storage:
  #   type: cassandra
  #   options:
  #     cassandra:
  #       servers: cassandra.db
  #       keyspace: jaeger_v1_ns0
  #   cassandraCreateSchema:
  #     datacenter: "ns0"
  #     mode: "test"
  storage:
    type: memory
    options:
      memory:
        max-traces: 100000
  # only used when services query jaeger for sampling strategy to use
  sampling:
    options:
      service_strategies:
        - service: "ambassador-ambassador"
          type: "ratelimiting"
          param: 5 # qps
        - service: "nginx"
          type: "ratelimiting"
          param: 1 # qps
          operation_strategies:
            - operation: "/status"
              type: "probabilistic"
              param: 0.0
        - service: "pepper-poker"
          type: "probabilistic"
          param: 0.01 # 1%
          operation_strategies:
            - operation: "/"
              type: "probabilistic"
              param: 1 # 100%
      default_strategy:
        type: probabilistic
        param: 0.01 # 1%
        operation_strategies:
          - operation: "/grpc.health.v1.Health/Check"
            type: "probabilistic"
            param: 0.0
          - operation: "/health"
            type: "probabilistic"
            param: 0.0
          - operation: "/metrics"
            type: "probabilistic"
            param: 0.0
  ingress:
    enabled: false
  # agent:
  #   strategy: DaemonSet
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
