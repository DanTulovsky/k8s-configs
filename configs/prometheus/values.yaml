operator:
  service:
    type: ClusterIP
    port: 8080
    clusterIP: None

prometheus:
  podMetadata:
    annotations:
      # without this, prometheus fails to scrape node daemon sets?
      linkerd.io/inject: "disabled"

  service:
    type: ClusterIP
    port: 9090
    clusterIP: None

  # remoteWrite:
  #   - url: https://metric-api.newrelic.com/prometheus/v1/write?prometheus_server=prometheus-cluster-1
  #     # path is /etc/prometheus/secrets/<name_of_secret_from_below>/<key_of_secret>
  #     bearerTokenFile: /etc/prometheus/secrets/prom-secret-files/relic_bearer_token

  secrets:
    - prom-secret-files

  persistence:
    enabled: true
    size: 64G

alertmanager:
  service:
    type: ClusterIP
    port: 9093
    clusterIP: None

node-exporter:
  serviceMonitor:
    enabled: true
    jobLabel: jobLabel
    relabelings:
      - action: replace
        regex: (.*)
        replacement: $1
        sourceLabels:
          - __meta_kubernetes_pod_node_name
        targetLabel: kubernetes_node

  extraArgs:
    collector.filesystem.ignored-mount-points: "^/(dev|proc|sys|var/lib/docker/.+)($|/)"
    collector.filesystem.ignored-fs-types: "^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$"

kubeProxy:
  ## Create a ServiceMonitor to scrape kube-proxy service
  ##
  enabled: false // doesn't work on DO, metrics served on localhost

# Component scraping for kubelet and kubelet hosted cAdvisor
kubelet:
  enabled: true
  namespace: kube-system

  serviceMonitor:
    metricRelabelings:
      - action: replace
        sourceLabels:
          - node
        targetLabel: instance
